@model MMP.Models.ViewModels.TimeSheet.AddCategoryandCategoryType
@{
    Layout = null;
}

<!doctype html>
<html>
<head>
    <script>
        function getCategoryTypeList() {
            debugger;

            //var id = $(ele).data('assigned-id');
            //alert(id);

            var id = "#CategoryTypeDropDown";

            //$(id).each(function () {
            //  $(this).remove();
            //});
            //$(id).empty();

            var categoryId = $("#categoryDropDown").val();
            $.ajax({
                url: '/TimeSheet/GetCategoryType',
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                data: JSON.stringify({ categoryId: +categoryId }),
                success: function (result) {
                    $(id).html("");
                    $(id).append($('<option></option>').val(null).html("---Select Category Type---"));
                    $.each($.parseJSON(result), function (i, ctd) // ctd => category type details
                    {
                        $(id).append($('<option></option>').val(ctd.ctd_id).html(ctd.ctd_name))
                    })

                },
                error: function () { alert("Something went wrong..") },
            });
        }
    </script>
</head>
<body>
</body>
</html>

@using (Html.BeginForm("AddCategoryTimeSheet", "TimeSheet", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{

    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="modal-header">
            <h4 class="modal-title" id="myModalLabel">Add Category to TimeSheet</h4>
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.tsd_timesheet_id)

        
        <div class="form-group">
            @Html.LabelFor(model => model.tsd_category_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.tsd_category_id, new SelectList(ViewBag.Categories, "category_id", "category_name"), "---Select Category---", new { @class = "form-control", @ClientIDMode = "static", @id = "categoryDropDown", @onchange = "javascript:getCategoryTypeList();" })
                @Html.ValidationMessageFor(model => model.tsd_category_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tsd_category_type_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.tsd_category_type_id , Enumerable.Empty<SelectListItem>(), "---Select Category Type---", new { @class = "form-control", @id = "CategoryTypeDropDown" })
                @Html.ValidationMessageFor(model => model.tsd_category_type_id, "", new { @class = "text-danger" })
            </div>
        </div>
         
        <div class="form-group">
            <input type="submit" value="Submit" class="btn btn-primary" />
            <input type="reset" value="Reset" class="btn" />
        </div>

    </div>



}

@section Scripts{
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
}














